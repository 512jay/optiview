project_name: OptiView
last_updated: '2025-04-26'

current_phase: walk-forward prediction + evaluation

status:
  data_ingestion: complete
  model_training: complete
  prediction_saving: complete
  quality_scoring: complete
  annotation_pipeline: complete
  database_transition: complete
  streamlit_ui: in_progress
  ini_export: tabled
  confidence_visualization: partial
  config_quality_dashboard: tabled

phases:
  streamlit_ui:
    - Phase 1: Foundation and Skeleton
    - Phase 2: View Predictions Tab (MVP)
    - Phase 3: Visual Confidence + Quality Metrics
    - Phase 4: Interactivity & Edits
    - Phase 5: Model Evaluation Insights
    - Phase 6: Polish + QA

next_tasks:
  - Build Streamlit UI initial skeleton (entry point, tabs, db connection)
  - Implement View Predictions tab (filters + table display)
  - Implement basic prediction summary screen:
      - List predicted settings for latest available month
      - Include symbol, model, predicted profit, confidence stars, expert advisor
      - Allow basic filtering by symbol and model
      - Highlight missing months if detected
  - Add prediction confidence and quality stars
  - Implement note/tag editing per prediction
  - Build Model Evaluation Insights (quality histogram, summary table)
  - Polish Streamlit UI (modularization, mypy compliance, visual QA)

tabled_ideas:
  - config_quality_histogram
  - auto-evaluate next month profit delta
  - streamlit leaderboard tab

tools_used:
  - Python 3.13
  - Poetry
  - SQLite (optiview.db)
  - SQLAlchemy ORM
  - MetaTrader5 (external)
  - Streamlit (planned)

principles:
  - all data comes from database (no more .parquet/.csv)
  - models must be EA-agnostic (no input_ assumption)
  - annotation always recomputes
  - all code mypy compliant

recent_updates:
  - Refactored bulk_predict.py to align with updated predict_optimal_config signature
  - Removed deprecated prediction_col and prediction_error_penalty arguments
  - Improved docstrings across bulk prediction, evaluation, and metadata modules
  - Streamlined imports for PEP-8 compliance
  - All prediction and evaluation modules now mypy and Sphinx compatible
